{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "\\",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "c = pipe_cor = pipe_tex = job = mat = res = ls = null\r\npropulsao = null\r\njogo_acabou = false\r\n\r\n\r\n\r\ngr =\r\n  dados_globais: null\r\n  dados_materiais: []\r\n  dados_instancias: null\r\n\r\narqs =\r\n  nave: 'data/nave.ply'\r\n  asteroide: 'data/meteoro.ply'\r\n  coracao: 'data/coracao.ply'\r\n\r\n\r\nnave = null\r\nrastro_propulsao = null  # Variável para manter referência ao rastro\r\nhp_nave = 3\r\nnivel_atual = 1\r\nmultiplicador_lv = 1.2\r\n\r\ncoracoes = []\r\n\r\nobj_quad = null\r\n\r\nteclas = {}\r\n\r\nasteroides_destruidos = 0\r\ninimigos_destruidos = 0 \r\n\r\n\r\nmain = () =>\r\n  c = await wgpu_context_new canvas:'tela', debug:true, transparent:true\r\n\r\n  c.frame_buffer_format 'color', 'depth'\r\n  c.vertex_format 'xyz', 'rgba', 'uv'\r\n  mat = c.use_mat4x4_format()\r\n\r\n\r\n  await carrega_dados()\r\n  prepara_shader_data_groups()\r\n  prepara_pipelines()\r\n  prepara_instancias()\r\n  prepara_teclado_eventos()\r\n  toca_som('trilha')\r\n  \r\n\r\n  \r\n  job = c.job()\r\n  renderiza()\r\n\r\n\r\ncarrega_dados = () ->  \r\n  res = c.resources_from_files(\r\n    arqs.nave, arqs.asteroide, arqs.coracao\r\n    'data/tiro.png',\r\n    'data/coracao.png',\r\n    'data/sprites/sp[1-4].png',\r\n    'data/explosao1/explosao[0-6].png',\r\n    'data/explosao2/explosao[0-7].png',\r\n    'data/propulsao/flicker/[1-6].png',\r\n    'data/rastro[1-2].png',\r\n    'shader_cor.wgsl', 'shader_tex.wgsl'\r\n  )\r\n  await res.load_all()\r\n\r\n\r\nprepara_shader_data_groups = () ->\r\n  gr.dados_globais = c.shader_data_group_with_uniform()\r\n  u = gr.dados_globais.binding(0).get_uniform()\r\n  u.begin()\r\n  u.mat4x4('view')\r\n  u.mat4x4('proj')\r\n  u.end()\r\n\r\n  u.proj = mat.perspective(50, c.canvas.width/c.canvas.height, 0.1, 10)\r\n  u.view = mat.look_at( vec(0,0,8), vec(0,0,0), vec(0,1,0) )\r\n  u.gpu_send()\r\n\r\n  gr.dados_materiais = res.materials_from_tex_list()\r\n\r\n  gr.dados_instancias = c.shader_data_group_with_uniform_list(300)\r\n  u = gr.dados_instancias.binding(0).get_uniform_list()\r\n  u.begin()\r\n  u.mat4x4('model')\r\n  u.end()\r\n\r\n\r\natualiza_score = () ->\r\n  try\r\n    scoreElemento = document.getElementById('score')\r\n    scoreElemento.textContent = (asteroides_destruidos + inimigos_destruidos).toString()\r\n\r\nloop_propulsao = (inst) ->\r\n  inst.start_animation_from_materials(\r\n    'data/propulsao/flicker/[1-6].png',\r\n    gr.dados_materiais,\r\n    on_animation_end: loop_propulsao\r\n  )\r\n\r\ncontrole_nivel = () ->\r\n  scoreElemento = document.getElementById('score')\r\n  nivelElemento = document.getElementById('level')\r\n\r\n  score = parseInt(scoreElemento.textContent)\r\n\r\n  nivel_atual += 1\r\n  nivelElemento.textContent = ( nivel_atual ).toString() \r\n\r\n  if Math.random() < 0.3\r\n    cria_coracao_power()\r\n\r\n\r\nprepara_pipelines = () ->\r\n  pipe_cor = c.pipeline()\r\n  pipe_cor.begin( 'triangles' )\r\n  pipe_cor.shader_from_src( res.text('shader_cor.wgsl') )\r\n  pipe_cor.depth_test( true )\r\n  pipe_cor.expect_group(0).binding(0).uniform()\r\n  pipe_cor.expect_group(2).binding(0).uniform_list()\r\n  pipe_cor.end()\r\n\r\n  pipe_tex = c.pipeline()\r\n  pipe_tex.begin( 'triangles' )\r\n  pipe_tex.shader_from_src( res.text('shader_tex.wgsl') )\r\n  pipe_tex.depth_test( true )\r\n  pipe_tex.depth_write( false )\r\n\r\n  pipe_tex.expect_group(0).binding(0).uniform()\r\n  pipe_tex.expect_group(1).binding(0).tex()\r\n  pipe_tex.expect_group(1).binding(1).tex_sampler()\r\n  pipe_tex.expect_group(2).binding(0).uniform_list()\r\n  pipe_tex.end()\r\n\r\n\r\nprepara_instancias = () ->\r\n  vdata = [\r\n    -0.5,-0.5,0.0, 1.0,0.0,0.0,1.0, 0.0,1.0,\r\n    +0.5,-0.5,0.0, 0.0,1.0,0.0,1.0, 1.0,1.0,\r\n    +0.5,+0.5,0.0, 0.0,0.0,1.0,1.0, 1.0,0.0,\r\n    -0.5,+0.5,0.0, 1.0,1.0,0.0,1.0, 0.0,0.0 ]\r\n  indices = [0,1,2, 2,3,0]\r\n  obj_quad = c.obj_from_data( vdata, indices )\r\n\r\n\r\n  ls = c.instance_list()\r\n  ls.use_groups(\r\n    global_index:   0, global_group: gr.dados_globais,\r\n    material_index: 1,\r\n    instance_index: 2, instance_group: gr.dados_instancias\r\n  )\r\n\r\n  cria_coracoes()\r\n  nave = cria_nave( vec( 3,-2,0 ) ) # x:7 e y:5 da pra faze wrap around\r\n  cria_asteroide( vec(-7, random_between(-5,5), 0) )\r\n  propulsao = ls.instance(obj_quad, pipeline: pipe_tex)\r\n  propulsao.set_class('propulsao')\r\n  propulsao.size = 1\r\n  propulsao.visivel = false\r\n  propulsao.start_animation_from_materials( 'data/propulsao/flicker/[1-6].png',gr.dados_materiais,\r\n  on_animation_end: (inst) => \r\n    inst.start_animation_from_materials(\r\n      'data/propulsao/flicker/[1-6].png',\r\n      gr.dados_materiais,\r\n      on_animation_end: loop_propulsao\r\n    )\r\n  )\r\ncria_novo = (inst) ->\r\n  switch inst\r\n    when 'asteroide'\r\n      cria_asteroide(vec(-7, random_between(-5,5), 0))\r\n      break\r\n\r\n    when 'coisa'\r\n      cria_coisa(vec(-7, random_between(-5,5), 0))\r\n      break\r\n\r\n\r\ncria_coracoes = () ->\r\n  for coracao in coracoes\r\n    coracao.remove()\r\n  coracoes.length = 0\r\n\r\n  if hp_nave > 9\r\n    hp_nave = 9\r\n\r\n  mt_coracao = gr.dados_materiais.get_by_url('data/coracao.png')\r\n\r\n  for i in [0...hp_nave]\r\n    coracao = ls.instance(obj_quad, pipeline: pipe_tex, material: mt_coracao)\r\n\r\n    coracao.set_class('coracao')\r\n    coracao.pos = vec(-5.5 + i * 0.5, 3, 0)\r\n    coracao.size = 0.4\r\n    coracoes.push(coracao)\r\n\r\n\r\ncria_nave = (pos) ->\r\n  inst = ls.instance( res.obj(arqs.nave), pipeline:pipe_cor )\r\n  inst.set_class( 'nave' )\r\n\r\n  inst.pos = pos\r\n  inst.vel = vec( 0,0,0 )\r\n  inst.ang = 0\r\n  inst.frente = vec( 0,1,0 )\r\n  inst.radius = 1\r\n\r\n\r\n  return inst\r\n\r\n\r\ncria_asteroide = (pos, size = 0.17) ->\r\n  min_pos = vec( -3,-3, 0 )\r\n  max_pos = vec( +3,+3, 0 )\r\n\r\n  max_vel = vec( 1,1, 0 )\r\n  min_vel = vec( -1,-1, 0 )\r\n\r\n\r\n\r\n  if not pos?\r\n    pos = vec_random( min_pos, max_pos )\r\n\r\n  ast = ls.instance( res.obj(arqs.asteroide), pipeline:pipe_cor )\r\n  ast.set_class( 'asteroide' )\r\n\r\n  ast.pos = pos\r\n  ast.vel = vec_random(min_vel, max_vel).mul_by_scalar(0.2) \r\n  ast.ang = random(90)\r\n  ast.size = size\r\n  ast.radius = ast.size * 1.5\r\n\r\n  return ast\r\n\r\n\r\ncria_coracao_power = (pos, size = 0.1) ->\r\n  min_pos = vec( 7,-3, 0 )\r\n  max_pos = vec( 7,+3, 0 )\r\n\r\n  max_vel = vec( 1,1, 0 )\r\n  min_vel = vec( -1,-1, 0 )\r\n\r\n\r\n\r\n  if not pos?\r\n    pos = vec_random( min_pos, max_pos )\r\n\r\n  ast = ls.instance( res.obj(arqs.coracao), pipeline:pipe_cor )\r\n  ast.set_class( 'coracao_power' )\r\n\r\n  ast.pos = pos\r\n  ast.vel = vec_random(min_vel, max_vel).mul_by_scalar(0.2) \r\n  ast.ang = random(90)\r\n  ast.size = size\r\n  ast.radius = ast.size * 1.5\r\n\r\n  return ast\r\n\r\n\r\n\r\ncria_tiro = (nave) ->\r\n  inst = ls.instance( obj_quad, pipeline:pipe_tex, material:gr.dados_materiais[0] )\r\n  inst.set_class( 'tiro' )\r\n\r\n  inst.pos = nave.pos.add(nave.frente.mul_by_scalar(0.8))\r\n  inst.radius = 0.1\r\n\r\n  inst.vel = nave.frente.mul_by_scalar(1)\r\n  inst.ang = 0\r\n\r\n  return inst\r\n\r\n\r\ncria_explosao = (pos) ->\r\n  inst = ls.instance( obj_quad, pipeline:pipe_tex )\r\n  inst.set_class( 'explosao' )\r\n\r\n  inst.pos = pos\r\n  inst.size = 2.0\r\n  inst.start_animation_from_materials(\r\n    'data/explosao1/explosao[0-6].png',\r\n    gr.dados_materiais,\r\n    on_animation_end: (inst) ->\r\n      inst.remove()\r\n  )\r\n\r\n\r\n\r\ncria_coisa = (pos) ->\r\n  min_pos = vec( -3,-3, 0 )\r\n  max_pos = vec( +3,+3, 0 )\r\n\r\n\r\n\r\n  max_vel = vec( 1,1, 0 )\r\n  min_vel = vec( -1,-1, 0 )\r\n\r\n  if not pos?\r\n    pos = vec_random( min_pos, max_pos )\r\n\r\n  url = res.get_url_group_random_item('data/sprites/sp[1-4].png')\r\n  mt = gr.dados_materiais.get_by_url(url) \r\n\r\n  coisa = ls.instance( obj_quad, pipeline:pipe_tex, material:mt )\r\n  coisa.set_class( 'coisa' )\r\n\r\n  coisa.pos = pos\r\n  coisa.vel = vec_random(min_vel, max_vel).mul_by_scalar(0.1) \r\n\r\n  coisa.size = 1.0\r\n  coisa.radius = coisa.size * 0.3\r\n  coisa.forca_perseguicao = 0.05  # Força de perseguição\r\n  coisa.velocidade_maxima = 0.8   # Velocidade máxima\r\n\r\n  return coisa\r\n\r\n\r\ntoca_som = (inst) ->\r\n  audioContext = new AudioContext();\r\n  source = audioContext.createBufferSource();\r\n  gainNode = audioContext.createGain();\r\n  analyser = audioContext.createAnalyser();\r\n  \r\n  switch inst\r\n    when 'tiro'\r\n      response = await fetch('data/sounds/shoot.mp3');\r\n      gainNode.gain.value = 0.1\r\n    when 'trilha'\r\n      response = await fetch('data/sounds/trilha.mp3');\r\n      gainNode.gain.value = 0.06\r\n      source.loop = true;\r\n    when 'colisao'\r\n      response = await fetch('data/sounds/boom.wav');\r\n      gainNode.gain.value = 0.06\r\n\r\n\r\n\r\n  arrayBuffer = await response.arrayBuffer();\r\n  audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\r\n\r\n\r\n\r\n  source.buffer = audioBuffer;\r\n\r\n\r\n  source.connect(gainNode)\r\n  gainNode.connect(analyser);\r\n  analyser.connect(audioContext.destination);\r\n\r\n  source.start();\r\n\r\n\r\nprepara_teclado_eventos = () ->\r\n  document.addEventListener 'keydown', on_keydown\r\n  document.addEventListener 'keyup', on_keyup\r\n\r\nrandom_between = (min, max) ->\r\n  Math.random() * (max - min) + min\r\n\r\nrandom_or = (another, other) ->\r\n  Math.random() < 0.5 ? another : other\r\n\r\n\r\n\r\non_keydown = (event) ->\r\n  if event.key == ' ' then event.preventDefault()\r\n\r\n  if not teclas[ event.key ]?\r\n    teclas[ event.key ] = 1\r\n  else\r\n    teclas[ event.key ]++\r\n\r\non_keyup = (event) ->\r\n  teclas[ event.key ] = 0\r\n\r\napertando_tecla = (key) ->\r\n  return teclas[ key ] >= 1\r\n\r\napertou_tecla = (key) ->\r\n  apertou = teclas[ key ] == 1\r\n  if apertou\r\n    teclas[ key ] = 2\r\n\r\npiscar_nave = () ->\r\n  vezes = 0\r\n  intervalo = setInterval( ->\r\n    nave.visivel = not nave.visivel\r\n    vezes += 1\r\n    if vezes >= 6  # 6 trocas = 3 piscadas\r\n      clearInterval(intervalo)\r\n      nave.visivel = true  # garante que termina visível\r\n  , 50)  \r\n\r\nbateu = (inst1, inst2) -> \r\n  dx = inst1.pos.x - inst2.pos.x\r\n  dy = inst1.pos.y - inst2.pos.y\r\n  dz = inst1.pos.z - inst2.pos.z\r\n  distancia = Math.sqrt(dx*dx + dy*dy + dz*dz)\r\n        \r\n  raio_colisao = inst1.radius + inst2.radius\r\n        \r\n  return distancia < raio_colisao\r\n\r\n\r\n\r\nnave_destruida = () ->\r\n  hp_nave = hp_nave - 1\r\n  piscar_nave()\r\n\r\n  if coracoes.length > 0\r\n    ultimo = coracoes.pop()\r\n    ultimo.remove()\r\n\r\n  if hp_nave == 0\r\n    nave.remove() \r\n    cria_explosao(nave.pos) \r\n    jogo_acabou = true\r\n\r\n    document.getElementById('btn-reiniciar').style.display = 'block'\r\n\r\n    return true\r\n\r\n  return false\r\n\r\ndetectar_colisao = () ->\r\n  tiros = ls.get_instances_by_class( 'tiro' )\r\n  asteroides = ls.get_instances_by_class( 'asteroide' )\r\n  inimigos = ls.get_instances_by_class( 'coisa' )\r\n  coracoes_power = ls.get_instances_by_class( 'coracao_power' )\r\n\r\n  for coracao in coracoes_power\r\n    if bateu(nave, coracao)\r\n      hp_nave += 1\r\n      coracao.remove()\r\n\r\n      cria_coracoes()\r\n\r\n  for inimigo in inimigos\r\n    if bateu(nave, inimigo)\r\n      inimigo.remove()\r\n      toca_som('colisao')\r\n\r\n      if nave_destruida() \r\n        if rastro_propulsao?\r\n          rastro_propulsao.deve_remover = true\r\n          rastro_propulsao = null\r\n        break\r\n\r\n  for ast in asteroides\r\n    if bateu(nave, ast)\r\n      ast.remove()\r\n      toca_som('colisao')\r\n\r\n      if nave_destruida()\r\n        # Marca o rastro para remoção quando a nave é destruída\r\n        if rastro_propulsao?\r\n          rastro_propulsao.deve_remover = true\r\n          rastro_propulsao = null\r\n\r\n        break\r\n\r\n  for tiro in tiros\r\n    for ast in asteroides\r\n      if bateu(tiro, ast)\r\n        tiro.remove()\r\n        ast.remove()\r\n        toca_som('colisao')\r\n        cria_explosao(ast.pos)\r\n        asteroides_destruidos+=1\r\n\r\n        if(ast.size > 0.1)\r\n          cria_asteroide(ast.pos, random_between(0.06, ast.size/1.3))\r\n          cria_asteroide(ast.pos, random_between(0.06, ast.size/1.3))\r\n          break\r\n\r\n    for inimigo in inimigos\r\n      if bateu(tiro, inimigo)\r\n        tiro.remove()\r\n        inimigo.remove()\r\n        cria_explosao(inimigo.pos)\r\n        toca_som('colisao')\r\n        inimigos_destruidos+=1\r\n        break\r\n  \r\nrenderiza = () ->\r\n  if not jogo_acabou\r\n    processa_movimento()\r\n    detectar_colisao()\r\n  atualiza_uniforms()\r\n\r\n  job.render_begin()\r\n  job.render_instance_list( ls )\r\n  job.render_end()\r\n  job.gpu_send()\r\n  atualiza_score()\r\n\r\n\r\n  c.animation_repeat renderiza, 10\r\n\r\n\r\najuste = (pos) ->\r\n# x:7 e y:5 da pra faze wrap around\r\n  if pos.x > 7 || pos.x < -7\r\n    pos.x *= -1\r\n  \r\n  if pos.y > 5 || pos.y < -5\r\n    pos.y *= -1\r\n\r\n  return pos\r\n\r\ncalcular_direcao_para_nave = (inimigo_pos, nave_pos) ->\r\n\r\n  dx = nave_pos.x - inimigo_pos.x\r\n  dy = nave_pos.y - inimigo_pos.y\r\n  dz = nave_pos.z - inimigo_pos.z\r\n\r\n\r\n  # Calcula a distância\r\n  distancia = Math.sqrt(dx*dx + dy*dy + dz*dz)\r\n\r\n  if distancia == 0\r\n    return vec(0, 0, 0)\r\n\r\n  # Normaliza o vetor (direção unitária)\r\n  return vec(dx/distancia, dy/distancia, dz/distancia)\r\n\r\nspawner_niveis = () ->\r\n  cria_novo('asteroide')\r\n  if nivel_atual == 2\r\n    cria_novo('asteroide')\r\n    cria_novo('coisa')\r\n  if nivel_atual > 2\r\n    cria_novo('coisa')\r\n    cria_novo('coisa')\r\n  if nivel_atual > 4\r\n    cria_novo('coisa')\r\n    for nivel in [0..nivel_atual]\r\n      if nivel % 2 == 0\r\n        cria_novo('coisa')\r\n    cria_novo('coisa')\r\n    cria_novo('asteroide')\r\n\r\nprocessa_movimento = () ->\r\n  fator = 0.1\r\n\r\n  asteroides = ls.get_instances_by_class( 'asteroide' )\r\n  coracoes_powerup = ls.get_instances_by_class( 'coracao_power' )\r\n\r\n  if (asteroides.length == 0 || asteroides_destruidos + inimigos_destruidos > nivel_atual * 5)\r\n    controle_nivel()\r\n    spawner_niveis()\r\n  \r\n  for ast in asteroides\r\n    ast.pos = ajuste(ast.pos.add( ast.vel.mul_by_scalar(fator * multiplicador_lv) ))\r\n\r\n  for coracao_p in coracoes_powerup\r\n    coracao_p.pos = ajuste(coracao_p.pos.add( coracao_p.vel.mul_by_scalar(fator) ))\r\n\r\n  tiros = ls.get_instances_by_class( 'tiro' )\r\n  for tiro in tiros\r\n    tiro.pos = tiro.pos.add( tiro.vel.mul_by_scalar(fator) )\r\n\r\n\r\n  coisas = ls.get_instances_by_class( 'coisa' )\r\n\r\n\r\n  for coisa in coisas\r\n    if nave?\r\n      direcao = calcular_direcao_para_nave(coisa.pos, nave.pos)\r\n    \r\n      forca = direcao.mul_by_scalar(coisa.forca_perseguicao * multiplicador_lv)\r\n      coisa.vel = coisa.vel.add(forca)\r\n      \r\n      vel_magnitude = Math.sqrt(coisa.vel.x*coisa.vel.x + coisa.vel.y*coisa.vel.y)\r\n      if vel_magnitude > coisa.velocidade_maxima\r\n        coisa.vel = coisa.vel.mul_by_scalar(coisa.velocidade_maxima / vel_magnitude)\r\n  \r\n    coisa.pos = ajuste(coisa.pos.add( coisa.vel.mul_by_scalar(0.3) ))\r\n    coisa.vel = coisa.vel.mul_by_scalar(0.2)\r\n\r\n\r\n\r\n  ang_inc = 4\r\n  y_inc = 0\r\n\r\n  if teclas['ArrowUp'] >= 1\r\n    y_inc = 1\r\n  else if teclas['ArrowDown'] >= 1\r\n    y_inc = -1\r\n\r\n  \r\n  if y_inc == 1  # Se está acelerando para frente\r\n    propulsao.visivel = true\r\n    propulsao.pos = nave.pos.add(nave.frente.mul_by_scalar(-0.8))\r\n    propulsao.ang = nave.ang + Math.PI  # Rotaciona 180 graus para ficar atrás da nave\r\n\r\n  else\r\n    propulsao.visivel = false\r\n\r\n\r\n\r\n  \r\n  if y_inc == -1\r\n    ang_inc = -ang_inc\r\n\r\n\r\n  if apertando_tecla( 'ArrowLeft' ) \r\n    nave.ang += ang_inc\r\n  else if apertando_tecla( 'ArrowRight' )\r\n    nave.ang -= ang_inc\r\n\r\n  if apertou_tecla( ' ' ) \r\n    cria_tiro( nave )\r\n    toca_som( 'tiro' )\r\n\r\n  \r\n  if apertou_tecla( 'a' )\r\n    cria_asteroide()\r\n    \r\n\r\n  if apertou_tecla( 'c' )\r\n    cria_coisa()\r\n  \r\n  if apertou_tecla('e')\r\n    cria_explosao(vec_random())\r\n\r\n\r\n  v = vec(0,1,0)\r\n  R = mat.rotate nave.ang\r\n  nave.frente = mat_mul R, v\r\n\r\n  if y_inc != 0\r\n    nave.vel = nave.vel.add( nave.frente.mul_by_scalar(fator*y_inc) )\r\n\r\n  nave.pos = ajuste(nave.pos.add( nave.vel.mul_by_scalar(fator) ))\r\n\r\n\r\n  nave.vel = nave.vel.mul_by_scalar( 0.95 )\r\n\r\n\r\nTRS = (pos, ang,rx,ry,rz, scale_factor) ->\r\n  S = mat.scale scale_factor\r\n  R = mat.rotate(ang, rx,ry,rz) \r\n  T = mat.translate pos\r\n  return mat.mul T, R, S\r\n\r\n\r\natualiza_uniforms = () ->\r\n\r\n  for inst in ls.instances()\r\n    continue unless inst? and inst.get_uniform_data?\r\n    u = inst.get_uniform_data()\r\n    cl = inst.get_class()\r\n\r\n    switch cl\r\n      when 'coracao'\r\n        u.model = TRS inst.pos, 0,0,0,0, inst.size\r\n\r\n      when 'nave'        \r\n        if inst.visivel == false\r\n          u.model = mat.scale(0)\r\n        else\r\n          u.model = TRS nave.pos, nave.ang,0,0,1, 0.3\r\n\r\n      when 'asteroide', 'coracao_power'\r\n        u.model = TRS inst.pos, inst.ang,1,1,1, inst.size\r\n        inst.ang = inst.ang + 1\r\n\r\n      when 'tiro'\r\n        u.model = TRS inst.pos, inst.ang,0,0,1, 1.0\r\n        inst.ang = inst.ang + 1\r\n      \r\n      when 'propulsao'\r\n        if inst.visivel == false\r\n          u.model = mat.scale(0)\r\n        else\r\n          u.model = TRS inst.pos, inst.ang, 0,0,1, inst.size\r\n\r\n      when 'coisa', 'explosao'\r\n        u.model = TRS inst.pos, 0,0,0,0, inst.size\r\n\r\n  gr.dados_instancias.gpu_send()\r\n\r\n\r\nmain()\r\n\r\nwindow.reiniciar = () =>\r\n  location.reload()"
  ]
}